name: openapi approve breaking changes

on:
  pull_request:
    types: [labeled, unlabeled]

permissions:
  statuses: write
  pull-requests: read

jobs:
  handle-approval-label:
    name: handle openapi approval label
    if: ${{ github.repository == 'ucdjs/ucd' && github.event.label.name == 'approve-breaking-openapi' }}
    runs-on: ubuntu-latest
    steps:
      - name: handle openapi approval status
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const headSha = context.payload.pull_request.head.sha;
            const action = context.payload.action;

            let state, description, actionText;

            if (action === 'labeled') {
              state = 'success';
              description = 'Breaking changes approved via label';
              actionText = 'Approving';
            } else if (action === 'unlabeled') {
              state = 'failure';
              description = 'Breaking changes need approval via label';
              actionText = 'Reverting approval for';
            } else {
              console.log(`Unknown action: ${action}`);
              return;
            }

            console.log(`${actionText} OpenAPI breaking changes for PR #${prNumber}`);

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: headSha,
              state: state,
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: description,
              context: 'openapi-schema-check'
            });

            console.log(`Status check updated to ${state} via approve-breaking-openapi label ${action}`);
