name: deploy to production

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run the workflow without creating a deployment
        required: false
        default: false
        type: boolean
      app:
        description: App to deploy (check ucdjs-apps.json for available apps, or use 'all' for all)
        required: false
        default: all
        type: string
  push:
    branches:
      - main

# Automatically cancel older in-progress jobs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

# remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TELEMETRY_DISABLED: 1
  DO_NOT_TRACK: 1
  FORCE_COLOR: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    if: github.repository == 'ucdjs/ucd' && github.event_name == 'push'
    outputs:
      has-changes: ${{ steps.detect.outputs.has-changes }}
      changed-apps: ${{ steps.detect.outputs.changed-apps }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: setup node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: lts/*
          cache: pnpm

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: detect changed apps
        id: detect
        env:
          TURBO_SCM_BASE: origin/main
        run: |
          # Get affected packages using turbo
          AFFECTED=$(pnpm turbo ls --affected --output=json)

          echo "Affected packages:"
          echo "$AFFECTED"

          PACKAGE_NAMES=$(echo "$AFFECTED" | jq -r '.packages.items[].name')
          echo "Affected package names:"
          echo "$PACKAGE_NAMES"

          FILTERED_PACKAGE_NAMES=$(echo "$PACKAGE_NAMES" | grep -E '^@ucdjs/(api|web|docs)$' | sed 's/@ucdjs\///')
          echo "Filtered deployable package names:"
          echo "$FILTERED_PACKAGE_NAMES"

          CHANGED_APPS=$(echo "$FILTERED_PACKAGE_NAMES" | jq -R -s -c 'split("\n") | map(select(length > 0))')

          # Check if any deployable apps changed
          if [ "$CHANGED_APPS" = "[]" ] || [ -z "$CHANGED_APPS" ]; then
            echo "has-changes=false" >> "$GITHUB_OUTPUT"
            echo "changed-apps=[]" >> "$GITHUB_OUTPUT"
            echo "No deployable apps affected by changes"
          else
            echo "has-changes=true" >> "$GITHUB_OUTPUT"
            echo "changed-apps=$CHANGED_APPS" >> "$GITHUB_OUTPUT"
            echo "Affected deployable apps: $CHANGED_APPS"
          fi

  production-approval:
    runs-on: ubuntu-latest
    needs: [detect-changes]
    timeout-minutes: 10
    if: |
      always() && (
        github.repository == 'ucdjs/ucd' &&
        (github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.has-changes == 'true')
      )
    environment: apps-production
    steps:
      - name: Approve production deployment
        run: echo "Production deployment approved"

  deploy:
    needs:
      - detect-changes
      - production-approval
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-app.yml
    with:
      environment: production
      cloudflare-env: production
      dry-run: ${{ github.event.inputs.dry-run == 'true' }}
      app: ${{ github.event.inputs.app || 'all' }}
      include-pr-comment: false
      repository-condition: ${{ github.repository == 'ucdjs/ucd' }}
      extra-build-step: false
    secrets:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
