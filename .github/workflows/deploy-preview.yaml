name: deploy to preview

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run the workflow without creating a deployment
        required: false
        default: false
        type: boolean
      app:
        description: App to deploy (api, web, or both)
        required: false
        default: both
        type: choice
        options:
          - both
          - api
          - web
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

# remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ucdjs'
    strategy:
      matrix:
        app:
          - ${{ (github.event.inputs.app == 'api' || github.event.inputs.app == 'both' || github.event.inputs.app == null) && 'api' || '' }}
          - ${{ (github.event.inputs.app == 'web' || github.event.inputs.app == 'both' || github.event.inputs.app == null) && 'web' || '' }}
        exclude:
          - app: ''
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: lts/*

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      - name: build apps
        run: pnpm build:apps

      - name: validate openapi
        if: matrix.app == 'api'
        run: pnpm --filter=@ucdjs/api run lint:openapi

      - name: typecheck
        run: pnpm run typecheck

      - name: test api
        if: matrix.app == 'api'
        run: pnpm run test --project "api:unit" --project "api:worker"

      - name: generate api version
        id: api-version
        if: matrix.app != 'web'
        env:
          HEAD_REF: ${{ github.head_ref }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          BRANCH_NAME="${HEAD_REF:-$REF_NAME}"

          # replace forward slashes and special characters with hyphens
          CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/-/g')

          # get short SHA (first 7 characters)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)

          # combine
          echo "version=$CLEAN_BRANCH-$SHORT_SHA" >> "$GITHUB_OUTPUT"

      - name: deploy ${{ matrix.app }}
        id: deploy
        if: ${{ github.event.inputs.dry-run != 'true' }}
        env:
          API_VERSION: ${{ steps.api-version.outputs.version || 'latest' }}
        uses: cloudflare/wrangler-action@392082e81ffbcb9ebdde27400634aa004b35ea37 # v3.14.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: ./apps/${{ matrix.app }}
          environment: preview
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          vars: API_VERSION

      - name: clean deployment url
        id: clean-url
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
        run: |
          CLEANED_URL=$(echo "$DEPLOYMENT_URL" | sed 's/ (custom domain)//')
          echo "deployment-url=https://$CLEANED_URL" >> "$GITHUB_OUTPUT"

      - name: write deployment url to summary
        env:
          APP: ${{ matrix.app }}
          DEPLOYMENT_URL: ${{ steps.clean-url.outputs.deployment-url }}
        run: |
          echo "## $APP Deployment" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** $DEPLOYMENT_URL" >> $GITHUB_STEP_SUMMARY

          # Write to a file for the comment job to read
          mkdir -p /tmp/deployment-urls
          echo "$DEPLOYMENT_URL" > /tmp/deployment-urls/${APP}-url.txt

      - name: upload deployment url
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        env:
          APP: ${{ matrix.app }}
        with:
          name: deployment-url-${{ env.APP }}
          path: /tmp/deployment-urls/${{ env.APP }}-url.txt
          retention-days: 1

  update-pr-comment:
    runs-on: ubuntu-latest
    if: github.event.pull_request.number && needs.deploy.result == 'success'
    needs: deploy
    permissions:
      pull-requests: write
    steps:
      - name: download api deployment url
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: deployment-url-api
          path: /tmp/
        continue-on-error: true

      - name: download web deployment url
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: deployment-url-web
          path: /tmp/
        continue-on-error: true

      - name: read deployment urls
        id: read-urls
        run: |
          if [ -f /tmp/api-url.txt ]; then
            API_URL=$(cat /tmp/api-url.txt)
            echo "api-url=$API_URL" >> "$GITHUB_OUTPUT"
          fi
          if [ -f /tmp/web-url.txt ]; then
            web_URL=$(cat /tmp/web-url.txt)
            echo "web-url=$web_URL" >> "$GITHUB_OUTPUT"
          fi

      - name: find existing comment
        id: find-comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- worker-preview -->

      - name: create or update PR comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          API_URL: ${{ steps.read-urls.outputs.api-url }}
          WEB_URL: ${{ steps.read-urls.outputs.web-url }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- worker-preview -->
            ## Preview Deployments

            The workers have been deployed successfully.

            ${{ env.API_URL && format('**API Preview URL:** {0}', env.API_URL) || '' }}
            ${{ env.web_URL && format('**WEB Preview URL:** {0}', env.WEB_URL) || '' }}

            This preview was built from commit ${{ env.HEAD_SHA }}

            ---
            <sub>ðŸ¤– This comment will be updated automatically when you push new commits to this PR.</sub>
          edit-mode: replace
