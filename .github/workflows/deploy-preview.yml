name: deploy to preview

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run the workflow without creating a deployment
        required: false
        default: false
        type: boolean
      app:
        description: App to deploy (api, web, or both)
        required: false
        default: both
        type: choice
        options:
          - both
          - api
          - web
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

# automatically cancel older in-progress jobs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

# remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  create-deployment-comment:
    name: create deployment comment
    runs-on: ubuntu-latest
    if: github.repository == 'ucdjs/ucd' && github.event.pull_request.user.login == 'luxass'
    permissions:
      pull-requests: write
    steps:
      - name: find existing comment
        id: find-comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- ucdjs:deployment:preview -->

      - name: create initial pr comment
        if: steps.find-comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          DRY_RUN: ${{ github.event.inputs.dry-run }}
          STATUS: ${{ github.event.inputs.dry-run == 'true' && '‚è∏Ô∏è Dry Run' || '‚è≥ In Progress' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- ucdjs:deployment:preview -->
            ## üåè Preview Deployments

            ${{ env.DRY_RUN == 'true' && '**Note: This was a dry run - no actual deployments were created.**' || '' }}

            | Application | Status            | Preview URL |
            | ----------- | ----------------- | ----------- |
            | Website     | ${{ env.STATUS }} | N/A         |
            | API         | ${{ env.STATUS }} | N/A         |

            **Built from commit:** `${{ env.HEAD_SHA }}`

            ---
            <sub>ü§ñ This comment will be updated automatically when you push new commits to this PR.</sub>
          edit-mode: replace

  deploy:
    needs:
      - create-deployment-comment
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/deploy-app.yml
    with:
      environment: preview
      cloudflare-env: preview
      dry-run: ${{ github.event.inputs.dry-run == 'true' }}
      app: ${{ github.event.inputs.app || 'both' }}
      include-pr-comment: true
      repository-condition: github.repository == 'ucdjs/ucd' && github.event.pull_request.user.login == 'luxass'
      extra-build-step: true
    secrets:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

  update-deployment-comment:
    runs-on: ubuntu-latest
    needs:
      - create-deployment-comment
      - deploy
    if: always() && github.repository == 'ucdjs/ucd' && github.event.pull_request.user.login == 'luxass'
    permissions:
      pull-requests: write
    steps:
      - name: download deployment results
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: deployment-result-*

      - name: process deployment results
        id: process-results
        env:
          DRY_RUN: ${{ github.event.inputs.dry-run }}
        run: |
          # Initialize variables
          api_status="‚è≠Ô∏è Skipped"
          web_status="‚è≠Ô∏è Skipped"
          api_url="N/A"
          web_url="N/A"

          # Process API deployment result if it exists
          if [ -f "deployment-result-api/deployment-result" ]; then
            api_result=$(cat deployment-result-api/deployment-result)
            api_app_status=$(echo "$api_result" | jq -r '.status')
            api_app_url=$(echo "$api_result" | jq -r '.url')

            case "$api_app_status" in
              "deployed")
                api_status="‚úÖ Deployed"
                api_url="[View Preview]($api_app_url)"
                ;;
              "dry-run")
                api_status="‚è∏Ô∏è Dry Run"
                ;;
              "failed")
                api_status="‚ùå Failed"
                ;;
            esac
          fi

          # Process Web deployment result if it exists
          if [ -f "deployment-result-web/deployment-result" ]; then
            web_result=$(cat deployment-result-web/deployment-result)
            web_app_status=$(echo "$web_result" | jq -r '.status')
            web_app_url=$(echo "$web_result" | jq -r '.url')

            case "$web_app_status" in
              "deployed")
                web_status="‚úÖ Deployed"
                web_url="[View Preview]($web_app_url)"
                ;;
              "dry-run")
                web_status="‚è∏Ô∏è Dry Run"
                ;;
              "failed")
                web_status="‚ùå Failed"
                ;;
            esac
          fi

          # Set outputs
          echo "api-status=$api_status" >> "$GITHUB_OUTPUT"
          echo "web-status=$web_status" >> "$GITHUB_OUTPUT"
          echo "api-url=$api_url" >> "$GITHUB_OUTPUT"
          echo "web-url=$web_url" >> "$GITHUB_OUTPUT"

      - name: find existing comment
        id: find-comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- ucdjs:deployment:preview -->

      - name: create consolidated pr comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          DRY_RUN: ${{ github.event.inputs.dry-run }}
          API_STATUS: ${{ steps.process-results.outputs.api-status }}
          WEB_STATUS: ${{ steps.process-results.outputs.web-status }}
          API_URL: ${{ steps.process-results.outputs.api-url }}
          WEB_URL: ${{ steps.process-results.outputs.web-url }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- ucdjs:deployment:preview -->
            ## üåè Preview Deployments

            ${{ env.DRY_RUN == 'true' && '**Note: This was a dry run - no actual deployments were created.**' || '' }}

            | Application | Status                | Preview URL        |
            | ----------- | --------------------- | ------------------ |
            | Website     | ${{ env.WEB_STATUS }} | ${{ env.WEB_URL }} |
            | API         | ${{ env.API_STATUS }} | ${{ env.API_URL }} |

            **Built from commit:** `${{ env.HEAD_SHA }}`

            ---
            <sub>ü§ñ This comment will be updated automatically when you push new commits to this PR.</sub>
          edit-mode: replace
