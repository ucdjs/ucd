name: deploy to preview

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run the workflow without creating a deployment
        required: false
        default: false
        type: boolean
      app:
        description: App to deploy (check ucdjs-apps.json for available apps, or use 'all' for all)
        required: false
        default: all
        type: string
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

# automatically cancel older in-progress jobs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

# remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TELEMETRY_DISABLED: 1
  DO_NOT_TRACK: 1
  FORCE_COLOR: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    if: github.repository == 'ucdjs/ucd' && github.event_name == 'pull_request'
    outputs:
      has-changes: ${{ steps.detect.outputs.has-changes }}
      changed-apps: ${{ steps.detect.outputs.changed-apps }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: setup node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: lts/*
          cache: pnpm

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: detect changed apps
        id: detect
        env:
          TURBO_SCM_BASE: origin/main
        run: |
          # Get affected packages using turbo
          AFFECTED=$(pnpm turbo ls --affected --output=json)

          echo "Affected packages:"
          echo "$AFFECTED"

          PACKAGE_NAMES=$(echo "$AFFECTED" | jq -r '.packages.items[].name')
          echo "Affected package names:"
          echo "$PACKAGE_NAMES"

          FILTERED_PACKAGE_NAMES=$(echo "$PACKAGE_NAMES" | grep -E '^@ucdjs/(api|web|docs)$' | sed 's/@ucdjs\///')
          echo "Filtered deployable package names:"
          echo "$FILTERED_PACKAGE_NAMES"

          CHANGED_APPS=$(echo "$FILTERED_PACKAGE_NAMES" | jq -R -s -c 'split("\n") | map(select(length > 0))')

          # Check if any deployable apps changed
          if [ "$CHANGED_APPS" = "[]" ] || [ -z "$CHANGED_APPS" ]; then
            echo "has-changes=false" >> "$GITHUB_OUTPUT"
            echo "changed-apps=[]" >> "$GITHUB_OUTPUT"
            echo "No deployable apps affected by changes"
          else
            echo "has-changes=true" >> "$GITHUB_OUTPUT"
            echo "changed-apps=$CHANGED_APPS" >> "$GITHUB_OUTPUT"
            echo "Affected deployable apps: $CHANGED_APPS"
          fi

  upsert-deployment-comment:
    name: upsert deployment comment
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: >
      always() && (
        github.repository == 'ucdjs/ucd' &&
        (github.event_name == 'workflow_dispatch' || needs.detect-changes.result == 'success')
      )
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: find existing comment
        id: find-comment
        uses: peter-evans/find-comment@b30e6a3c0ed37e7c023ccd3f1db5c6c0b0c23aad # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- ucdjs:deployment:preview -->

      - name: generate initial comment table
        id: generate-table
        uses: ./.github/actions/manage-apps
        with:
          command: generate-comment-table
          dry-run: ${{ github.event.inputs.dry-run }}

      - name: create initial pr comment
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          DRY_RUN: ${{ github.event.inputs.dry-run }}
          COMMENT_TABLE: ${{ steps.generate-table.outputs.comment-table }}
          HAS_CHANGES: ${{ (github.event_name == 'pull_request' && needs.detect-changes.outputs.has-changes) || 'true' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- ucdjs:deployment:preview -->
            ## 🌏 Preview Deployments

            ${{ env.HAS_CHANGES == 'false' && '
            > [!NOTE]
            > No deployable apps affected by changes in this PR.
            ' || '' }}${{ env.DRY_RUN == 'true' && '
            > [!NOTE]
            > This was a dry run - no actual deployments were created.
            ' || '' }}
            ${{ env.HAS_CHANGES != 'false' && env.COMMENT_TABLE || '' }}

            **Built from commit:** `${{ env.HEAD_SHA }}`

            ---
            <sub>🤖 This comment will be updated automatically when you push new commits to this PR.</sub>
          edit-mode: replace

  preview-approval:
    runs-on: ubuntu-latest
    needs: [detect-changes, upsert-deployment-comment]
    timeout-minutes: 10
    if: |
      always() && (
        github.repository == 'ucdjs/ucd' &&
        needs.upsert-deployment-comment.result == 'success' &&
        (github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.has-changes == 'true')
      )
    environment: apps-preview
    steps:
      - name: Approve preview deployment
        run: echo "Preview deployment approved"

  deploy:
    name: deploy apps
    needs:
      - detect-changes
      - preview-approval
    if: >
      always() && (
        needs.preview-approval.result == 'success' &&
        github.repository == 'ucdjs/ucd'
      )
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/deploy-app.yml
    with:
      environment: preview
      cloudflare-env: preview
      dry-run: ${{ github.event.inputs.dry-run == 'true' }}
      app: ${{ github.event.inputs.app || 'all' }}
      changed-apps: ${{ github.event_name == 'pull_request' && needs.detect-changes.outputs.changed-apps || '[]' }}
      include-pr-comment: true
      repository-condition: ${{ github.repository == 'ucdjs/ucd' && github.event.pull_request.user.login == 'luxass' }}
      extra-build-step: true
    secrets:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

  update-deployment-comment:
    name: update deployment comment
    runs-on: ubuntu-latest
    needs:
      - preview-approval
      - deploy
    if: >
      always() && (
        needs.preview-approval.result == 'success' &&
        github.repository == 'ucdjs/ucd'
      )
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: download deployment results
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: deployment-result-*

      - name: process deployment results
        id: process-results
        uses: ./.github/actions/manage-apps
        with:
          command: process-deployment-results
          deployment-results-path: .
          dry-run: ${{ github.event.inputs.dry-run }}

      - name: find existing comment
        id: find-comment
        uses: peter-evans/find-comment@b30e6a3c0ed37e7c023ccd3f1db5c6c0b0c23aad # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- ucdjs:deployment:preview -->

      - name: create consolidated pr comment
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          DRY_RUN: ${{ github.event.inputs.dry-run }}
          COMMENT_TABLE: ${{ steps.process-results.outputs.comment-table }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- ucdjs:deployment:preview -->
            ## 🌏 Preview Deployments

            ${{ env.DRY_RUN == 'true' && '
            > [!NOTE]
            > This was a dry run - no actual deployments were created.
            ' || '' }}
            ${{ env.COMMENT_TABLE }}

            **Built from commit:** `${{ env.HEAD_SHA }}`

            ---
            <sub>🤖 This comment will be updated automatically when you push new commits to this PR.</sub>
          edit-mode: replace
